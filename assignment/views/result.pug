extends layout

block content
    //- .ui.container
    title Results
    p
    img.ui.centered.tiny.image(src='https://www.flaticon.com/svg/static/icons/svg/879/879528.svg')

    br
    .ui.basic.center.aligned.segment
        .page-header(style='display: inline-block; margin: 0 auto;')
            .ui.huge.header Your Results!
            h1 In total, we assessed a grand total of #{total} tweets!


        table
            tbody
                tr
                td
                    #piechart
                td  
                    h2 A Sentimental Bar Graph!
                    #my_dataviz

    script.
        var chartData = !{ chartData };
        var first = !{ first };
        var second = !{ second };
        var third = !{ third };
        var fourth = !{ fourth };
        var fifth = !{ fifth };
        var fillColor = d3.scale.category20();



        var w = 800, h = 450;

        YNGraph(chartData[0], chartData[1])


        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = google.visualization.arrayToDataTable([
            ['Word', 'Appearance %'],
            first,
            second,
            third,
            fourth,
            fifth
        ]);


            // Optional; add a title and set the width and height of the chart
            var options = { legend: {alignment: 'center', position: 'top'},'width':800, 'height':900, 'slices': {  0: {offset: 0.2}}};

            // Display the chart inside the <div> element with id="piechart"
            var container = document.getElementById('piechart');
            var chart = new google.visualization.PieChart(container);
            chart.draw(data, options);
        }


        function YNGraph(Yes, No) {

            d3.selectAll("#my_dataviz > *").remove(); 

            var max;

            // set up range for the graph 
            if (Yes > No){
                max = Yes;
            } else {max = No};


            // set the dimensions and margins of the graph
            var margin = {top: 10, right: 30, bottom: 90, left: 40},
                width = 460 - margin.left,
                height = 450 - margin.top - margin.bottom;

            // append the svg object to the body of the page
            var svg = d3.select("#my_dataviz").append("svg")
                    .attr("width", width + margin.left + margin.right)
                    .attr("height", height + margin.top + margin.bottom)
                .append("g")
                    .attr("transform",
                        "translate(" + margin.left + "," + margin.top + ")");


            // call the saved json
            d3.json("/data/sentiments.json", function(data1) {
            // X axis
            var x = d3.scaleBand()
                .range([ 0, width ])
                .domain(data1.map(function(d1) { ; return d1.status; }))
                .padding(0.2);
            svg.append("g")
                .style("font", "20px times")
                .attr("transform", "translate(0," + height + ")")
                .call(d3.axisBottom(x))
                .selectAll("text")
                    .attr("transform", "translate(0,0)rotate(0)")
                    .style("text-anchor", "center");

            // Add Y axis
            var y = d3.scaleLinear()
                .domain([0,  max + max*0.1])
                .range([ height, 0]);
            svg.append("g")
                .call(d3.axisLeft(y));

            // Bars
            svg.selectAll("mybar")
                .data(data1)
                .enter()
                .append("rect")
                    .attr("x", function(d1) { return x(d1.status); })
                    .attr("width", x.bandwidth())
                    .attr("fill", "#5b61b5")
                    // no bar at the beginning thus:
                    .attr("height", function(d1) { return height - y(0); }) // always equal to 0
                    .attr("y", function(d1) { return y(0); })

            // Animation
            svg.selectAll("rect")
                .transition()
                .duration(800)
                .attr("y", function(d1) { return y(d1.amount); })
                .attr("height", function(d1) { return height - y(d1.amount); })
                .delay(function(d1,i){return(i*100)})

            })
        }

